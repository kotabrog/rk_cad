use rk_step_parser::import_step;
const STEP: &str = include_str!("fixtures/cube.step");

#[test]
fn test_import_step() {
    let entities = import_step(STEP).unwrap();
    println!("{:?}", entities);
    println!("entities: {}", entities.len());
    // assert_eq!(entities.len(), 182);
    assert_eq!(entities.len(), 80);
}

// ADVANCED_BREP_SHAPE_REPRESENTATION
// ADVANCED_FACE
// APPLICATION_CONTEXT
// APPLICATION_PROTOCOL_DEFINITION
// x AXIS2_PLACEMENT_3D
// x CARTESIAN_POINT
// CLOSED_SHELL
// COLOUR_RGB
// CURVE_STYLE
// x DIRECTION
// DRAUGHTING_PRE_DEFINED_CURVE_FONT
// EDGE_CURVE
// EDGE_LOOP
// FACE_BOUND
// FILL_AREA_STYLE
// FILL_AREA_STYLE_COLOUR
// GEOMETRIC_REPRESENTATION_CONTEXT
// GLOBAL_UNCERTAINTY_ASSIGNED_CONTEXT
// GLOBAL_UNIT_ASSIGNED_CONTEXT
// LENGTH_UNIT
// LINE
// MANIFOLD_SOLID_BREP
// MECHANICAL_DESIGN_GEOMETRIC_PRESENTATION_REPRESENTATION
// NAMED_UNIT
// ORIENTED_EDGE
// PLANE
// PLANE_ANGLE_UNIT
// PRESENTATION_STYLE_ASSIGNMENT
// PRODUCT
// PRODUCT_CONTEXT
// PRODUCT_DEFINITION
// PRODUCT_DEFINITION_CONTEXT
// PRODUCT_DEFINITION_FORMATION
// PRODUCT_DEFINITION_SHAPE
// PRODUCT_RELATED_PRODUCT_CATEGORY
// REPRESENTATION_CONTEXT
// SHAPE_DEFINITION_REPRESENTATION
// SI_UNIT
// SOLID_ANGLE_UNIT
// STYLED_ITEM
// SURFACE_SIDE_STYLE
// SURFACE_STYLE_FILL_AREA
// SURFACE_STYLE_USAGE
// UNCERTAINTY_MEASURE_WITH_UNIT
// x VECTOR
// x VERTEX_POINT
